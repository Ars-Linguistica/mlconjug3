# .github/workflows/manual_build_workflow_trigger.yml

name: "Manual Build and test Workflow"
on: [workflow_dispatch]
jobs:
    build_wheels_with_setuptools:
        name: Build setuptool packages on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ ubuntu-latest, windows-latest, macos-latest ]
                include:
                    -   os: ubuntu-latest
                        path: ~/.cache/pip
                    -   os: macos-latest
                        path: ~/Library/Caches/pip
                    -   os: windows-latest
                        path: ~\AppData\Local\pip\Cache
                python-version: [ 3.7, 3.8, 3.9, '3.10', 'pypy-3.7' ]

        steps:
            -   uses: actions/checkout@v2

            -   uses: actions/setup-python@v2
                with:
                    python-version: ${{ matrix.python-version }}

            -   uses: actions/cache@v2
                with:
                    path: ${{ matrix.path }}
                    key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/requirements_dev.txt') }}
            -   name: Install dependencies
                run: |
                    python -m pip install wheel pytest pytest-cov codecov pandas pyxlsb types-setuptools
                    pip install -r requirements_dev.txt
            -   name: Build wheel using pip
                run: pip wheel -w DEST_DIR .
                  # to supply options, put them in 'env', like:
                  # env:
                #   CIBW_SOME_OPTION: value
            -   name: Build package using setup.py
                run: |
                    python setup.py sdist bdist_wheel
                    twine check dist/*
            -   name: Upload coverage artifacts to codecov
                run: codecov --token=370386ee-28d7-441f-b4eb-7f63f8c5c3e9
            -   name: Run bandit
                run: bandit -r mlconjug3/ -c .bandit.yml
            -   name: Run Typechecker
                run:  mypy
            -   name: Run PyTest with coverage
                run: |
                    py.test --cov=./mlconjug3/
            -   name: Upload coverage artifacts to codecov
                run: codecov --token=370386ee-28d7-441f-b4eb-7f63f8c5c3e9
