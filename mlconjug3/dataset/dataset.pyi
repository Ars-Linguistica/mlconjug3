from typing import (
    Optional,
    Mapping,
    List,
    Sequence,
    DefaultDict,
    Any,
    Tuple,
    Type,
    AbstractSet,
    Union,
)

class DataSet:
    verbs_dict: Mapping[str, Mapping[str, str]] = ...
    verbs: AbstractSet[str] = ...
    templates: List[str] = ...
    verbs_list: List[str] = ...
    templates_list: List[int] = ...
    dict_conjug: Optional[DefaultDict[str, Sequence[str]]] = ...
    train_input: Sequence[str] = ...
    train_labels: Sequence[int] = ...
    test_input: Sequence[str] = ...
    test_labels: Sequence[int] = ...
    min_threshold: int = ...
    split_proportion: float = ...
    def __init__(self, verbs_dict: Mapping[str, Mapping[str, str]] = ...) -> None: ...
    def __repr__(self) -> str: ...
    def construct_dict_conjug(self) -> None: ...
    def split_data(
        self, threshold: int = ..., proportion: Union[float, int] = ...
    ) -> None: ...
