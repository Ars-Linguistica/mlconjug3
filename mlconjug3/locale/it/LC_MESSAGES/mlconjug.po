# Translation template for mlconjug.py.
# Copyright (C) 2018 SekouDiaoNlp
# SekouDiaoNlp <diao.sekou.nlp@gmail.com>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2018-06-15 21:51+0200\n"
"PO-Revision-Date: 2018-06-16 18:32+0200\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 2.0.8\n"
"Last-Translator: SekouDiaoNlp <diao.sekou.nlp@gmail.com>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Language: it\n"

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:51
msgid ""
"\n"
"    | This is the main class of the project.\n"
"    | The class manages the Verbiste data set and provides an interface with "
"the scikit-learn model.\n"
"    | If no parameters are provided, the default language is set to french "
"and the pre-trained french conjugation model is used.\n"
"    | The class defines the method conjugate(verb, language) which is the "
"main method of the module.\n"
"\n"
"    :param language: string.\n"
"        Language of the conjugator. The default language is 'fr' for "
"french.\n"
"    :param model: string.\n"
"        A user provided model if the user has trained his own model.\n"
"\n"
"    "
msgstr ""
"\n"
"    | Questa è la classe principale del progetto.\n"
"    | La classe gestisce il set di dati Verbiste e fornisce un'interfaccia "
"con il modello di apprendimento scikit.\n"
"    | Se non vengono forniti parametri, la lingua predefinita è impostata su "
"francese e viene utilizzato il modello di coniugazione francese pre-"
"addestrato.\n"
"    | La classe definisce il metodo conjugate (verb, language) che è il "
"metodo principale del modulo.\n"
"\n"
"    :param language: string.\n"
"        Lingua del coniugatore. La lingua predefinita è \"fr\" per il "
"francese.\n"
"    :param model: string.\n"
"        Un modello fornito dall'utente se l'utente ha formato il proprio "
"modello.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:77
msgid ""
"\n"
"        | This is the main method of this class.\n"
"        | It first checks to see if the verb is in Verbiste.\n"
"        | If it is not, and a pre-trained scikit-learn model has been "
"supplied, the method then calls the model\n"
"        to predict the conjugation class of the provided verb.\n"
"\n"
"        | Returns a Verb object or None.\n"
"\n"
"        :param verb: string.\n"
"            Verb to conjugate.\n"
"        :param subject: string.\n"
"            Toggles abbreviated or full pronouns.\n"
"            The default value is 'abbrev'.\n"
"            Select 'pronoun' for full pronouns.\n"
"        :return: Verb object or None.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Questo è il metodo principale di questa classe.\n"
"        | Prima controlla se il verbo è in Verbiste.\n"
"        | In caso contrario, è stato fornito un modello di apprendimento "
"scikit pre-addestrato, quindi il metodo chiama il modello\n"
"        per predire la classe di coniugazione del verbo fornito.\n"
"\n"
"        | Restituisce un oggetto Verb o None.\n"
"\n"
"        :param verb: string.\n"
"            Verbo da coniugare.\n"
"        :param subject: string.\n"
"            Attiva i pronomi abbreviati o pieni.\n"
"            Il valore predefinito è 'abbrev'.\n"
"            Seleziona \"pronome\" per i pronomi completi.\n"
"        :return: Verb object or None.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:95
msgid "The supplied word: {0} is not a valid verb in {1}."
msgstr "La parola fornita: {0} non è un verbo valido in {1}."

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:117
msgid ""
"\n"
"        Assigns the provided pre-trained scikit-learn model to be able to "
"conjugate unknown verbs.\n"
"\n"
"        :param model: scikit-learn Classifier or Pipeline.\n"
"\n"
"        "
msgstr ""
"\n"
"        Assegna il modello pre-formato scikit-learn fornito per essere in "
"grado di coniugare verbi sconosciuti.\n"
"\n"
"        :param model: scikit-learn Classifier or Pipeline.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:129
msgid ""
"\n"
"    | Custom Vectorizer optimized for extracting verbs features.\n"
"    | The Vectorizer subclasses sklearn.feature_extraction.text."
"CountVectorizer .\n"
"    | As in Indo-European languages verbs are inflected by adding a "
"morphological suffix,\n"
"    the vectorizer extracts verb endings and produces a vector "
"representation of the verb with binary features.\n"
"\n"
"    | The features are the verb ending ngrams. (ngram_range is set at class "
"instanciation).\n"
"\n"
"    "
msgstr ""
"\n"
"    | Vectorizer personalizzato ottimizzato per l'estrazione delle "
"caratteristiche dei verbi.\n"
"    | Le sottoclassi di Vectorizer sklearn.feature_extraction.text."
"CountVectorizer.\n"
"    | Come nelle lingue indoeuropee i verbi sono flessi aggiungendo un "
"suffisso morfologico,\n"
"    il vettore estrae le desinenze dei verbi e produce una rappresentazione "
"vettoriale del verbo con caratteristiche binarie.\n"
"\n"
"    | Le caratteristiche sono i verbo che terminano con ngrams. (n-"
"gram_range è impostato sull'istanza della classe).\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:139
msgid ""
"\n"
"        Parses a verb and returns the ending ngrams.\n"
"\n"
"        :param verb: string.\n"
"            Verb to vectorize.\n"
"        :return: list.\n"
"            Final ngrams of the verb.\n"
"        "
msgstr ""
"\n"
"        Analizza un verbo e restituisce gli n-gram finali.\n"
"\n"
"        :param verb: string.\n"
"            Verbo da vettorializzare.\n"
"        :return: list.\n"
"            N-gram finali del verbo.\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:156
msgid ""
"\n"
"    | This class holds and manages the data set.\n"
"    | Defines helper functions for managing Machine Learning tasks like "
"constructing a training and testing set.\n"
"\n"
"    :param VerbisteObj:\n"
"        Instance of a Verbiste object.\n"
"\n"
"    "
msgstr ""
"\n"
"    | Questa classe contiene e gestisce il set di dati.\n"
"    | Definisce le funzioni di supporto per la gestione delle attività di "
"Machine Learning come la costruzione di un set di training e test.\n"
"\n"
"    :param VerbisteObj:\n"
"        Istanza di un oggetto Verbiste.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:181
msgid ""
"\n"
"        | Populates the dictionary containing the conjugation templates.\n"
"        | Populates the lists containing the verbs and their templates.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Compila il dizionario contenente i modelli di coniugazione.\n"
"        | Compila gli elenchi contenenti i verbi e i loro modelli.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:195
msgid ""
"\n"
"        Splits the data into a training and a testing set.\n"
"\n"
"        :param threshold: int.\n"
"            Minimum size of conjugation class to be split.\n"
"        :param proportion: float.\n"
"            Proportion of samples in the training set.\n"
"            Must be between 0 and 1.\n"
"\n"
"        "
msgstr ""
"\n"
"        Divide i dati in un training e un set di test.\n"
"\n"
"        :param threshold: int.\n"
"            Dimensione minima della classe di coniugazione da dividere.\n"
"        :param proportion: float.\n"
"            Proporzione di campioni nel set di allenamento.\n"
"            Deve essere compreso tra 0 e 1.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:206
msgid "The split proportion must be between 0 and 1."
msgstr "La proporzione divisa deve essere compresa tra 0 e 1."

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:231
msgid ""
"\n"
"    | This class manages the scikit-learn model.\n"
"    | The Pipeline includes a feature vectorizer, a feature selector and a "
"classifier.\n"
"    | If any of the vectorizer, feature selector or classifier is not "
"supplied at instance declaration,\n"
"    the __init__ method will provide good default values that get more than "
"92% prediction accuracy.\n"
"\n"
"    :param vectorizer: scikit-learn Vectorizer.\n"
"    :param feature_selector: scikit-learn Classifier with a fit_transform() "
"method\n"
"    :param classifier: scikit-learn Classifier with a predict() method\n"
"\n"
"    "
msgstr ""
"\n"
"    | Questa classe gestisce il modello di apprendimento scikit.\n"
"    | La pipeline include un vettore di funzionalità, un selettore di "
"funzionalità e un classificatore.\n"
"    | Se uno qualsiasi dei vettori, selettore di funzionalità o "
"classificatore non viene fornito nella dichiarazione di istanza,\n"
"    il metodo __init__ fornirà buoni valori predefiniti che ottengono più "
"del 92% di accuratezza di previsione.\n"
"\n"
"    :param vectorizer: scikit-learn Vectorizer.\n"
"    :param feature_selector: scikit-learn Classifier with a fit_transform() "
"method\n"
"    :param classifier: scikit-learn Classifier with a predict() method\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:258
msgid ""
"\n"
"        Trains the model on the supplied samples and labels.\n"
"\n"
"        :param samples: list.\n"
"            List of verbs.\n"
"        :param labels: list.\n"
"            List of verb templates.\n"
"\n"
"        "
msgstr ""
"\n"
"        Prepara il modello sui campioni e sulle etichette forniti.\n"
"\n"
"        :param samples: list.\n"
"            Elenco dei verbi.\n"
"        :param labels: list.\n"
"            Elenco di modelli di verbo.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:271
msgid ""
"\n"
"        Predicts the conjugation class of the provided list of verbs.\n"
"\n"
"        :param verbs: list.\n"
"            List of verbs.\n"
"        :return: list.\n"
"            List of predicted conjugation groups.\n"
"\n"
"        "
msgstr ""
"\n"
"        Predice la classe di coniugazione dell'elenco di verbi fornito.\n"
"\n"
"        :param verbs: list.\n"
"            Elenco dei verbi.\n"
"        :return: list.\n"
"            Elenco dei gruppi di coniugazione previsti.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:91
msgid ""
"\n"
"    This is the class handling the Verbiste xml files.\n"
"\n"
"    :param language: string.\n"
"    | The language of the conjugator. The default value is fr for French.\n"
"    | The allowed values are: fr, en, es, it, pt, ro.\n"
"\n"
"    "
msgstr ""
"\n"
"    Questa è la classe che gestisce i file xml di Verbiste.\n"
"\n"
"    :param language: string.\n"
"    | La lingua del coniugatore. Il valore predefinito è fr per il "
"francese.\n"
"    | I valori consentiti sono: fr, en, es, it, pt, ro.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:102
msgid ""
"Unsupported language.\n"
"The allowed languages are fr, en, es, it, pt, ro."
msgstr ""
"Lingua non supportata\n"
"Le lingue consentite sono fr, en, es, it, pt, ro."

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:120
msgid ""
"\n"
"        Load and parses the verbs from xml file.\n"
"\n"
"        :param verbs_file: string or path object.\n"
"            Path to the verbs xml file.\n"
"\n"
"        "
msgstr ""
"\n"
"        Carica e analizza i verbi dal file xml.\n"
"\n"
"        :param verbs_file: string or path object.\n"
"            Percorso del file xml dei verbi.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:131
msgid ""
"\n"
"        Parses XML file\n"
"\n"
"        :param file: FileObject.\n"
"            XML file containing the verbs.\n"
"        :return: OrderedDict.\n"
"            An OrderedDict containing the verb and its template for all "
"verbs in the file.\n"
"\n"
"        "
msgstr ""
"\n"
"        Analizza il file XML\n"
"\n"
"        :param file: FileObject.\n"
"            File XML contenente i verbi\n"
"        :return: OrderedDict.\n"
"            Un OrderedDict contenente il verbo e il suo modello per tutti i "
"verbi nel file.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:151
msgid ""
"\n"
"        | Detects the allowed endings for verbs in the supported languages.\n"
"        | All the supported languages except for English restrict the form a "
"verb can take.\n"
"        | As English is much more productive and varied in the morphology of "
"its verbs, any word is allowed as a verb.\n"
"\n"
"        :return: set.\n"
"            A set containing the allowed endings of verbs in the target "
"language.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Rileva le terminazioni consentite per i verbi nelle lingue "
"supportate.\n"
"        | Tutte le lingue supportate tranne l'inglese limitano il modulo che "
"un verbo può assumere.\n"
"        | Poiché l'inglese è molto più produttivo e vario nella morfologia "
"dei suoi verbi, qualsiasi parola è consentita come un verbo.\n"
"\n"
"         : return: set.\n"
"            Un set contenente le terminazioni consentite di verbi nella "
"lingua di destinazione.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:166
msgid ""
"\n"
"        | Checks if the verb is a valid verb in the given language.\n"
"        | English words are always treated as possible verbs.\n"
"        | Verbs in other languages are filtered by their endings.\n"
"\n"
"        :param verb: string.\n"
"            The verb conjugate.\n"
"        :return: bool.\n"
"            True if the verb is a valid verb in the language. False "
"otherwise.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Controlla se il verbo è un verbo valido nella lingua data.\n"
"        | Le parole inglesi sono sempre trattate come possibili verbi.\n"
"        | I verbi in altre lingue sono filtrati dalle loro terminazioni.\n"
"\n"
"        :param verb: string.\n"
"            Il verbo coniugare.\n"
"        :return: bool.\n"
"            True se il verbo è un verbo valido nella lingua. False "
"altrimenti.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:186
msgid ""
"\n"
"        Load and parses the conjugations from xml file.\n"
"\n"
"        :param conjugations_file: string or path object.\n"
"            Path to the conjugation xml file.\n"
"\n"
"        "
msgstr ""
"\n"
"        Carica e analizza le coniugazioni dal file xml.\n"
"\n"
"        :param conjugations_file: string or path object.\n"
"            Percorso del file xml di coniugazione.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:197
msgid ""
"\n"
"        Parses XML file\n"
"\n"
"        :param file: FileObject.\n"
"            XML file containing the conjugation templates\n"
"        :return: OrderedDict.\n"
"            An OrderedDict containing all the conjugation templates in the "
"file.\n"
"\n"
"        "
msgstr ""
"\n"
"        Analizza il file XML\n"
"\n"
"        :param file: FileObject.\n"
"            File XML contenente i modelli di coniugazione\n"
"        :return: OrderedDict.\n"
"            Un OrderedDict contenente tutti i modelli di coniugazione nel "
"file.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:218
msgid ""
"\n"
"        Load and parses the inflected forms of the tense from xml file.\n"
"\n"
"        :param tense: string.\n"
"            The current tense being processed.\n"
"        :return: list.\n"
"            List of conjugated suffixes.\n"
"\n"
"        "
msgstr ""
"\n"
"        Carica e analizza le forme flesse del tempo dal file xml.\n"
"\n"
"        :param tense: string.\n"
"            Il tempo corrente in elaborazione.\n"
"        :return: list.\n"
"            Elenco di suffissi coniugati.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:241
msgid ""
"\n"
"        Gets verb information and returns a VerbInfo instance.\n"
"\n"
"        :param verb: string.\n"
"            Verb to conjugate.\n"
"        :return: VerbInfo object or None.\n"
"\n"
"        "
msgstr ""
"\n"
"        Ottiene informazioni sui verbi e restituisce un'istanza de "
"VerbInfo.\n"
"\n"
"        :param verb: string.\n"
"            Verbo da coniugare.\n"
"        :return: VerbInfo object or None.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:259
msgid ""
"\n"
"        Gets conjugation information corresponding to the given template.\n"
"\n"
"        :param template: string.\n"
"            Name of the verb ending pattern.\n"
"        :return: OrderedDict or None.\n"
"            OrderedDict containing the conjugated suffixes of the template.\n"
"\n"
"        "
msgstr ""
"\n"
"        Ottiene informazioni di coniugazione corrispondenti al modello "
"specificato.\n"
"\n"
"        :param template: string.\n"
"            Nome del modello di fine del verbo.\n"
"        :return: OrderedDict or None.\n"
"            OrderedDict contenente i suffissi coniugati del modello.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:276
msgid ""
"\n"
"    This class defines the Verbiste verb information structure.\n"
"\n"
"    :param infinitive: string.\n"
"        Infinitive form of the verb.\n"
"    :param root: string.\n"
"        Lexical root of the verb.\n"
"    :param template: string.\n"
"        Name of the verb ending pattern.\n"
"\n"
"    "
msgstr ""
"\n"
"    Questa classe definisce la struttura delle informazioni del verbo del "
"Verbiste.\n"
"\n"
"    :param infinitive: string.\n"
"        Forma infinita del verbo\n"
"    :param root: string.\n"
"        Radice lessicale del verbo.\n"
"    :param template: string.\n"
"        Nome del modello di fine del verbo.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:305
msgid ""
"\n"
"    This class defines the Verb Object.\n"
"\n"
"    :param verb_info: VerbInfo Object.\n"
"    :param conjug_info: OrderedDict.\n"
"    :param subject: string.\n"
"        Toggles abbreviated or full pronouns.\n"
"        The default value is 'abbrev'.\n"
"        Select 'pronoun' for full pronouns.\n"
"\n"
"    "
msgstr ""
"\n"
"    Questa classe definisce l'oggetto Verb.\n"
"\n"
"    :param verb_info: VerbInfo Object.\n"
"    :param conjug_info: OrderedDict.\n"
"    :param subject: string.\n"
"        Attiva i pronomi abbreviati o pieni.\n"
"        Il valore predefinito è 'abbrev'.\n"
"        Seleziona \"pronome\" per i pronomi completi.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:331
msgid ""
"\n"
"        | Populates the inflected forms of the verb.\n"
"        | This is the generic version of this method.\n"
"        | It does not add personal pronouns to the conjugated forms.\n"
"        | This method can handle any new language if the conjugation "
"structure conforms to the Verbiste XML Schema.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Compila le forme flesse del verbo.\n"
"        | Questa è la versione generica di questo metodo.\n"
"        | Non aggiunge pronomi personali alle forme coniugate.\n"
"        | Questo metodo può gestire qualsiasi nuovo linguaggio se la "
"struttura di coniugazione è conforme allo schema XML di Verbiste.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:358
msgid ""
"\n"
"    This class defines the French Verb Object.\n"
"\n"
"    "
msgstr ""
"\n"
"    Questa classe definisce l'oggetto Verb francese.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:367
#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:405
#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:445
#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:483
#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:521
#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:559
msgid ""
"\n"
"        | Populates the inflected forms of the verb.\n"
"        | Adds personal pronouns to the inflected verbs.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Compila le forme flesse del verbo.\n"
"        | Aggiunge pronomi personali ai verbi inflessi.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:396
msgid ""
"\n"
"    This class defines the English Verb Object.\n"
"\n"
"    "
msgstr ""
"\n"
"    Questa classe definisce l'oggetto Verb inglese.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:436
msgid ""
"\n"
"    This class defines the Spanish Verb Object.\n"
"\n"
"    "
msgstr ""
"\n"
"    Questa classe definisce l'oggetto Verb spagnolo.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:474
msgid ""
"\n"
"    This class defines the Italian Verb Object.\n"
"\n"
"    "
msgstr ""
"\n"
"    Questa classe definisce l'oggetto Verb italiano.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:512
msgid ""
"\n"
"    This class defines the Portuguese Verb Object.\n"
"\n"
"    "
msgstr ""
"\n"
"    Questa classe definisce l'oggetto Verb Portoghese.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\PyVerbiste.py:550
msgid ""
"\n"
"    This class defines the Romanian Verb Object.\n"
"\n"
"    "
msgstr ""
"\n"
"    Questa classe definisce l'oggetto Verb rumeno.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\cli.py:14
msgid ""
"The language for the conjugation model. The values can be fr, en, es, it, pt "
"or ro. The default value is fr."
msgstr ""
"La lingua per il modello di coniugazione. I valori possono essere fr, en, "
"es, it, pt o ro. Il valore predefinito è fr."

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\cli.py:17
msgid "Console script for mlconjug."
msgstr "Script della console per mlconjug."
