# Translation template for mlconjug.py.
# Copyright (C) 2018 SekouD
# SekouD <sekoud.python@gmail.com>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2018-06-15 21:51+0200\n"
"PO-Revision-Date: 2018-06-16 16:19+0200\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 2.0.8\n"
"Last-Translator: SekouD <sekoud.python@gmail.com>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Language: es\n"

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:51
msgid ""
"\n"
"    | This is the main class of the project.\n"
"    | The class manages the Verbiste data set and provides an interface with "
"the scikit-learn model.\n"
"    | If no parameters are provided, the default language is set to french "
"and the pre-trained french conjugation model is used.\n"
"    | The class defines the method conjugate(verb, language) which is the "
"main method of the module.\n"
"\n"
"    :param language: string.\n"
"        Language of the conjugator. The default language is 'fr' for "
"french.\n"
"    :param model: string.\n"
"        A user provided model if the user has trained his own model.\n"
"\n"
"    "
msgstr ""
"\n"
"    | Esta es la clase principal del proyecto.\n"
"    | La clase administra el conjunto de datos Verbiste y proporciona una "
"interfaz con el modelo scikit-learn.\n"
"    | Si no se proporcionan parámetros, el idioma predeterminado se "
"establece en francés y se utiliza el modelo de conjugación francés "
"preentrenado.\n"
"    | La clase define el método conjugado (verbo, lenguaje) que es el método "
"principal del módulo.\n"
"\n"
"    :param language: string.\n"
"        Idioma del conjugador El idioma predeterminado es 'fr' para "
"francés.\n"
"    :param model: string.\n"
"        Un modelo proporcionado por el usuario si el usuario ha entrenado su "
"propio modelo.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:77
msgid ""
"\n"
"        | This is the main method of this class.\n"
"        | It first checks to see if the verb is in Verbiste.\n"
"        | If it is not, and a pre-trained scikit-learn model has been "
"supplied, the method then calls the model\n"
"        to predict the conjugation class of the provided verb.\n"
"\n"
"        | Returns a Verb object or None.\n"
"\n"
"        :param verb: string.\n"
"            Verb to conjugate.\n"
"        :param subject: string.\n"
"            Toggles abbreviated or full pronouns.\n"
"            The default value is 'abbrev'.\n"
"            Select 'pronoun' for full pronouns.\n"
"        :return: Verb object or None.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Este es el método principal de esta clase.\n"
"        | Primero verifica si el verbo está en Verbiste.\n"
"        | Si no es así, y se ha proporcionado un modelo de aprendizaje "
"scikit preentrenado, el método llama al modelo\n"
"        para predecir la clase de conjugación del verbo proporcionado.\n"
"\n"
"        | Devuelve un objeto Verb o None.\n"
"\n"
"        :param verb: string.\n"
"            Verbo para conjugar\n"
"        :param subject: string.\n"
"            Alterna los pronombres abreviados o completos.\n"
"            El valor predeterminado es 'abreviatura'.\n"
"            Seleccione 'pronombre' para los pronombres completos.\n"
"        :return: Verb object or None.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:95
msgid "The supplied word: {0} is not a valid verb in {1}."
msgstr "La palabra proporcionada: {0} no es un verbo válido en {1}."

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:117
msgid ""
"\n"
"        Assigns the provided pre-trained scikit-learn model to be able to "
"conjugate unknown verbs.\n"
"\n"
"        :param model: scikit-learn Classifier or Pipeline.\n"
"\n"
"        "
msgstr ""
"\n"
"        Asigna el modelo de aprendizaje de scikit preentrenado provisto para "
"poder conjugar verbos desconocidos.\n"
"\n"
"        :param model: scikit-learn Classifier or Pipeline.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:129
msgid ""
"\n"
"    | Custom Vectorizer optimized for extracting verbs features.\n"
"    | The Vectorizer subclasses sklearn.feature_extraction.text."
"CountVectorizer .\n"
"    | As in Indo-European languages verbs are inflected by adding a "
"morphological suffix,\n"
"    the vectorizer extracts verb endings and produces a vector "
"representation of the verb with binary features.\n"
"\n"
"    | The features are the verb ending ngrams. (ngram_range is set at class "
"instanciation).\n"
"\n"
"    "
msgstr ""
"\n"
"    | Custom Vectorizer optimizado para extraer las características de los "
"verbos.\n"
"    | Las subclases Vectorizer sklearn.feature_extraction.text."
"CountVectorizer.\n"
"    | Al igual que en los idiomas indoeuropeos, los verbos se inflan "
"añadiendo un sufijo morfológico,\n"
"    el vectorizador extrae las terminaciones de los verbos y produce una "
"representación vectorial del verbo con características binarias.\n"
"\n"
"    | Las características son los ngrams de final del verbo. (ngram_range se "
"establece en la instanciación de clase).\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:139
msgid ""
"\n"
"        Parses a verb and returns the ending ngrams.\n"
"\n"
"        :param verb: string.\n"
"            Verb to vectorize.\n"
"        :return: list.\n"
"            Final ngrams of the verb.\n"
"        "
msgstr ""
"\n"
"        Analizaun verbo y devuelve los n-gramos finales.\n"
"\n"
"        :param verb: string.\n"
"            Verbo para vectorizar\n"
"        :return: list.\n"
"            N-gramos finales del verbo.\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:156
msgid ""
"\n"
"    | This class holds and manages the data set.\n"
"    | Defines helper functions for managing Machine Learning tasks like "
"constructing a training and testing set.\n"
"\n"
"    :param VerbisteObj:\n"
"        Instance of a Verbiste object.\n"
"\n"
"    "
msgstr ""
"\n"
"    | Esta clase contiene y administra el conjunto de datos.\n"
"    | Define funciones de ayuda para gestionar tareas de Aprendizaje "
"automático, como la construcción de un conjunto de entrenamiento y prueba.\n"
"\n"
"    :param VerbisteObj:\n"
"        Instancia de un objeto Verbiste.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:181
msgid ""
"\n"
"        | Populates the dictionary containing the conjugation templates.\n"
"        | Populates the lists containing the verbs and their templates.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Rellena el diccionario que contiene las plantillas de "
"conjugación.\n"
"        | Rellena las listas que contienen los verbos y sus plantillas.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:195
msgid ""
"\n"
"        Splits the data into a training and a testing set.\n"
"\n"
"        :param threshold: int.\n"
"            Minimum size of conjugation class to be split.\n"
"        :param proportion: float.\n"
"            Proportion of samples in the training set.\n"
"            Must be between 0 and 1.\n"
"\n"
"        "
msgstr ""
"\n"
"        Divide los datos en un conjunto de entrenamiento y prueba.\n"
"\n"
"        :param threshold: int.\n"
"            Tamaño mínimo de la clase de conjugación para dividir.\n"
"        :param proportion: float.\n"
"            Proporción de muestras en el conjunto de entrenamiento.\n"
"            Debe estar entre 0 y 1.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:206
msgid "The split proportion must be between 0 and 1."
msgstr "La proporción dividida debe estar entre 0 y 1."

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:231
msgid ""
"\n"
"    | This class manages the scikit-learn model.\n"
"    | The Pipeline includes a feature vectorizer, a feature selector and a "
"classifier.\n"
"    | If any of the vectorizer, feature selector or classifier is not "
"supplied at instance declaration,\n"
"    the __init__ method will provide good default values that get more than "
"92% prediction accuracy.\n"
"\n"
"    :param vectorizer: scikit-learn Vectorizer.\n"
"    :param feature_selector: scikit-learn Classifier with a fit_transform() "
"method\n"
"    :param classifier: scikit-learn Classifier with a predict() method\n"
"\n"
"    "
msgstr ""
"\n"
"    | Esta clase maneja el modelo scikit-learn.\n"
"    | El Pipeline incluye un vectorizador de características, un selector de "
"funciones y un clasificador.\n"
"    | Si alguno de los vectores, selector de funciones o clasificador no se "
"incluye en la declaración de instancia,\n"
"    el método __init__ proporcionará buenos valores predeterminados que "
"obtienen más del 92% de precisión de predicción.\n"
"\n"
"    :param vectorizer: scikit-learn Vectorizer.\n"
"    :param feature_selector: scikit-learn Classifier with a fit_transform() "
"method\n"
"    :param classifier: scikit-learn Classifier with a predict() method\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:258
msgid ""
"\n"
"        Trains the model on the supplied samples and labels.\n"
"\n"
"        :param samples: list.\n"
"            List of verbs.\n"
"        :param labels: list.\n"
"            List of verb templates.\n"
"\n"
"        "
msgstr ""
"\n"
"        Entrena el modelo en las muestras y etiquetas suministradas.\n"
"\n"
"        :param samples: list.\n"
"            Lista de verbos.\n"
"        :param labels: list.\n"
"            Lista de plantillas de verbos.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:271
msgid ""
"\n"
"        Predicts the conjugation class of the provided list of verbs.\n"
"\n"
"        :param verbs: list.\n"
"            List of verbs.\n"
"        :return: list.\n"
"            List of predicted conjugation groups.\n"
"\n"
"        "
msgstr ""
"\n"
"        Predice la clase de conjugación de la lista de verbos "
"proporcionada.\n"
"\n"
"        :param verbs: list.\n"
"            Lista de verbos.\n"
"        :return: list.\n"
"            Lista de grupos de conjugación predichos.\n"
"\n"
"        "
