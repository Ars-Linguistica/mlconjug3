# Translation template for mlconjug.py.
# Copyright (C) 2018 SekouD
# SekouD <sekoud.python@gmail.com>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2018-06-15 21:51+0200\n"
"PO-Revision-Date: 2018-06-16 16:26+0200\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 2.0.8\n"
"Last-Translator: SekouD <sekoud.python@gmail.com>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Language: pt\n"

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:51
msgid ""
"\n"
"    | This is the main class of the project.\n"
"    | The class manages the Verbiste data set and provides an interface with "
"the scikit-learn model.\n"
"    | If no parameters are provided, the default language is set to french "
"and the pre-trained french conjugation model is used.\n"
"    | The class defines the method conjugate(verb, language) which is the "
"main method of the module.\n"
"\n"
"    :param language: string.\n"
"        Language of the conjugator. The default language is 'fr' for "
"french.\n"
"    :param model: string.\n"
"        A user provided model if the user has trained his own model.\n"
"\n"
"    "
msgstr ""
"\n"
"    | Esta é a classe principal do projeto.\n"
"    | A classe gerencia o conjunto de dados Verbiste e fornece uma interface "
"com o modelo scikit-learn.\n"
"    | Se nenhum parâmetro for fornecido, o idioma padrão é definido para "
"francês e o modelo de conjugação francês pré-treinado é usado.\n"
"    | A classe define o método conjugado (verbo, idioma) que é o método "
"principal do módulo.\n"
"\n"
"    :param language: string.\n"
"        Linguagem do conjugador. O idioma padrão é 'fr' para francês.\n"
"    :param model: string.\n"
"        Um modelo fornecido pelo usuário se o usuário tiver treinado seu "
"próprio modelo.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:77
msgid ""
"\n"
"        | This is the main method of this class.\n"
"        | It first checks to see if the verb is in Verbiste.\n"
"        | If it is not, and a pre-trained scikit-learn model has been "
"supplied, the method then calls the model\n"
"        to predict the conjugation class of the provided verb.\n"
"\n"
"        | Returns a Verb object or None.\n"
"\n"
"        :param verb: string.\n"
"            Verb to conjugate.\n"
"        :param subject: string.\n"
"            Toggles abbreviated or full pronouns.\n"
"            The default value is 'abbrev'.\n"
"            Select 'pronoun' for full pronouns.\n"
"        :return: Verb object or None.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Este é o método principal desta classe.\n"
"        | Primeiro, verifica se o verbo está em Verbiste.\n"
"        | Se não for, e um modelo de scikit-learn pré-treinado foi "
"fornecido, o método chama o modelo\n"
"        para prever a classe de conjugação do verbo fornecido.\n"
"\n"
"        | Retorna um objeto Verb ou None.\n"
"\n"
"        :param verb: string.\n"
"            Verbo para conjugar.\n"
"        :param subject: string.\n"
"            Ativa os pronomes abreviados ou completos.\n"
"            O valor padrão é 'abrev'.\n"
"            Selecione 'pronome' para pronomes completos.\n"
"        :return: Verb object or None.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:95
msgid "The supplied word: {0} is not a valid verb in {1}."
msgstr "A palavra fornecida: {0} não é um verbo válido em {1}."

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:117
msgid ""
"\n"
"        Assigns the provided pre-trained scikit-learn model to be able to "
"conjugate unknown verbs.\n"
"\n"
"        :param model: scikit-learn Classifier or Pipeline.\n"
"\n"
"        "
msgstr ""
"\n"
"        Atribui o modelo scikit-learn pré-treinado fornecido para poder "
"conjugar verbos desconhecidos.\n"
"\n"
"        :param model: scikit-learn Classifier or Pipeline.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:129
msgid ""
"\n"
"    | Custom Vectorizer optimized for extracting verbs features.\n"
"    | The Vectorizer subclasses sklearn.feature_extraction.text."
"CountVectorizer .\n"
"    | As in Indo-European languages verbs are inflected by adding a "
"morphological suffix,\n"
"    the vectorizer extracts verb endings and produces a vector "
"representation of the verb with binary features.\n"
"\n"
"    | The features are the verb ending ngrams. (ngram_range is set at class "
"instanciation).\n"
"\n"
"    "
msgstr ""
"\n"
"    | Vectorizer personalizado otimizado para extrair recursos de verbos.\n"
"    | O vetorizador subclasse sklearn.feature_extraction.text."
"CountVectorizer.\n"
"    | Como nas línguas indo-européias os verbos são flexionados pela adição "
"de um sufixo morfológico,\n"
"    o vetorizador extrai terminações verbais e produz uma representação "
"vetorial do verbo com características binárias.\n"
"\n"
"    | As características são os verbos ngrams. (n-gram_range é definido no "
"instanciation de classe).\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:139
msgid ""
"\n"
"        Parses a verb and returns the ending ngrams.\n"
"\n"
"        :param verb: string.\n"
"            Verb to vectorize.\n"
"        :return: list.\n"
"            Final ngrams of the verb.\n"
"        "
msgstr ""
"\n"
"        Analisa um verbo e retorna os n-grams finais.\n"
"\n"
"        :param verb: string.\n"
"            Verbo para vetorizar.\n"
"        :return: list.\n"
"            N-grams finais do verbo.\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:156
msgid ""
"\n"
"    | This class holds and manages the data set.\n"
"    | Defines helper functions for managing Machine Learning tasks like "
"constructing a training and testing set.\n"
"\n"
"    :param VerbisteObj:\n"
"        Instance of a Verbiste object.\n"
"\n"
"    "
msgstr ""
"\n"
"    | Esta classe mantém e gerencia o conjunto de dados.\n"
"    | Define funções auxiliares para gerenciar tarefas de Aprendizado de "
"Máquina, como a construção de um conjunto de treinamento e teste.\n"
"\n"
"    :param VerbisteObj:\n"
"        Instância de um objeto Verbiste.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:181
msgid ""
"\n"
"        | Populates the dictionary containing the conjugation templates.\n"
"        | Populates the lists containing the verbs and their templates.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Preenche o dicionário que contém os modelos de conjugação.\n"
"        | Preenche as listas que contêm os verbos e seus modelos.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:195
msgid ""
"\n"
"        Splits the data into a training and a testing set.\n"
"\n"
"        :param threshold: int.\n"
"            Minimum size of conjugation class to be split.\n"
"        :param proportion: float.\n"
"            Proportion of samples in the training set.\n"
"            Must be between 0 and 1.\n"
"\n"
"        "
msgstr ""
"\n"
"        Divide os dados em um treinamento e um conjunto de testes.\n"
"\n"
"        :param threshold: int.\n"
"            Tamanho mínimo da classe de conjugação a ser dividida.\n"
"        :param proportion: float.\n"
"            Proporção de amostras no conjunto de treinamento.\n"
"            Deve estar entre 0 e 1.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:206
msgid "The split proportion must be between 0 and 1."
msgstr "A proporção dividida deve estar entre 0 e 1."

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:231
msgid ""
"\n"
"    | This class manages the scikit-learn model.\n"
"    | The Pipeline includes a feature vectorizer, a feature selector and a "
"classifier.\n"
"    | If any of the vectorizer, feature selector or classifier is not "
"supplied at instance declaration,\n"
"    the __init__ method will provide good default values that get more than "
"92% prediction accuracy.\n"
"\n"
"    :param vectorizer: scikit-learn Vectorizer.\n"
"    :param feature_selector: scikit-learn Classifier with a fit_transform() "
"method\n"
"    :param classifier: scikit-learn Classifier with a predict() method\n"
"\n"
"    "
msgstr ""
"\n"
"    | Esta classe gerencia o modelo scikit-learn.\n"
"     | O Pipeline inclui um vetorizador de recursos, um seletor de recursos "
"e um classificador.\n"
"     | Se algum vetorizador, seletor de recurso ou classificador não for "
"fornecido na declaração de instância,\n"
"     o método __init__ fornecerá bons valores padrão que obtêm mais de 92% "
"de precisão de previsão.\n"
"\n"
"    :param vectorizer: scikit-learn Vectorizer.\n"
"    :param feature_selector: scikit-learn Classifier with a fit_transform() "
"method\n"
"    :param classifier: scikit-learn Classifier with a predict() method\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:258
msgid ""
"\n"
"        Trains the model on the supplied samples and labels.\n"
"\n"
"        :param samples: list.\n"
"            List of verbs.\n"
"        :param labels: list.\n"
"            List of verb templates.\n"
"\n"
"        "
msgstr ""
"\n"
"        Treina o modelo nas amostras e rótulos fornecidos.\n"
"\n"
"        :param samples: list.\n"
"            Lista de verbos\n"
"        :param labels: list.\n"
"            Lista de modelos de verbos.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:271
msgid ""
"\n"
"        Predicts the conjugation class of the provided list of verbs.\n"
"\n"
"        :param verbs: list.\n"
"            List of verbs.\n"
"        :return: list.\n"
"            List of predicted conjugation groups.\n"
"\n"
"        "
msgstr ""
"\n"
"        Prevê a classe de conjugação da lista de verbos fornecida.\n"
"\n"
"        :param verbs: list.\n"
"            Lista de verbos\n"
"        :return: list.\n"
"            Lista de grupos de conjugação previstos.\n"
"\n"
"        "
