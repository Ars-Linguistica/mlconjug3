# Translation template for mlconjug.py.
# Copyright (C) 2018 SekouD
# SekouD <sekoud.python@gmail.com>, 2018.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2018-06-15 21:51+0200\n"
"PO-Revision-Date: 2018-06-16 16:23+0200\n"
"Language-Team: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: pygettext.py 1.5\n"
"X-Generator: Poedit 2.0.8\n"
"Last-Translator: SekouD <sekoud.python@gmail.com>\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"Language: fr\n"

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:51
msgid ""
"\n"
"    | This is the main class of the project.\n"
"    | The class manages the Verbiste data set and provides an interface with "
"the scikit-learn model.\n"
"    | If no parameters are provided, the default language is set to french "
"and the pre-trained french conjugation model is used.\n"
"    | The class defines the method conjugate(verb, language) which is the "
"main method of the module.\n"
"\n"
"    :param language: string.\n"
"        Language of the conjugator. The default language is 'fr' for "
"french.\n"
"    :param model: string.\n"
"        A user provided model if the user has trained his own model.\n"
"\n"
"    "
msgstr ""
"\n"
"    | Ceci est la classe principale du projet.\n"
"    | La classe gère la base de données Verbiste et fournit une interface "
"avec le modèle scikit-learn.\n"
"    | Si aucun paramètre n'est fourni, la langue par défaut est le français "
"et le modèle de conjugaison français pré-entraîné est utilisé.\n"
"    | La classe définit la méthode conjugate(verbe, langue) qui est la "
"méthode principale du module.\n"
"\n"
"    :param language: string.\n"
"        Langue du conjugateur. La langue par défaut est 'fr' pour le "
"français.\n"
"    :param model: string.\n"
"        Un modèle fourni par l'utilisateur si l'utilisateur a formé son "
"propre modèle.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:77
msgid ""
"\n"
"        | This is the main method of this class.\n"
"        | It first checks to see if the verb is in Verbiste.\n"
"        | If it is not, and a pre-trained scikit-learn model has been "
"supplied, the method then calls the model\n"
"        to predict the conjugation class of the provided verb.\n"
"\n"
"        | Returns a Verb object or None.\n"
"\n"
"        :param verb: string.\n"
"            Verb to conjugate.\n"
"        :param subject: string.\n"
"            Toggles abbreviated or full pronouns.\n"
"            The default value is 'abbrev'.\n"
"            Select 'pronoun' for full pronouns.\n"
"        :return: Verb object or None.\n"
"\n"
"        "
msgstr ""
"\n"
"        | C'est la méthode principale de cette classe.\n"
"        | La méthode vérifie d'abord si le verbe est dans Verbiste.\n"
"        | Si ce n'est pas le cas, et qu'un modèle scikit-learn pré-entrainé "
"a été fourni, la méthode appelle alors le modèle\n"
"        pour prédire la classe de conjugaison du verbe fourni.\n"
"\n"
"        | Retourne un objet Verbe ou None.\n"
"\n"
"        :param verb: string.\n"
"            Verbe pour conjuguer.\n"
"        :param subject: string.\n"
"            Selectionne les pronoms abrégés ou complets.\n"
"            La valeur par défaut est 'abbrev'.\n"
"            Sélectionnez \"pronom\" pour les pronoms complets.\n"
"        :return: Verb object or None.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:95
msgid "The supplied word: {0} is not a valid verb in {1}."
msgstr "Le mot fourni: {0} n'est pas un verbe valide en {1}."

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:117
msgid ""
"\n"
"        Assigns the provided pre-trained scikit-learn model to be able to "
"conjugate unknown verbs.\n"
"\n"
"        :param model: scikit-learn Classifier or Pipeline.\n"
"\n"
"        "
msgstr ""
"\n"
"        Assigne le modèle scikit-learn pré-entrainé fourni pour pouvoir "
"conjuguer les verbes inconnus.\n"
"\n"
"        :param model: scikit-learn Classifier ou Pipeline.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:129
msgid ""
"\n"
"    | Custom Vectorizer optimized for extracting verbs features.\n"
"    | The Vectorizer subclasses sklearn.feature_extraction.text."
"CountVectorizer .\n"
"    | As in Indo-European languages verbs are inflected by adding a "
"morphological suffix,\n"
"    the vectorizer extracts verb endings and produces a vector "
"representation of the verb with binary features.\n"
"\n"
"    | The features are the verb ending ngrams. (ngram_range is set at class "
"instanciation).\n"
"\n"
"    "
msgstr ""
"\n"
"    | Vectorizer personnalisé optimisé pour extraire les caractéristiques  "
"des verbes.\n"
"    | Le Vectorizer hérite de sklearn.feature_extraction.text."
"CountVectorizer.\n"
"    | Comme dans les langues indo-européennes, les verbes sont infléchis en "
"ajoutant un suffixe morphologique,\n"
"    le vectorizer extrait les terminaisons verbales et produit une "
"représentation vectorielle du verbe avec des caractéristiques binaires.\n"
"\n"
"    | Les caractéristiques sont la terminaison verbale ngrams. (ngram_range "
"est défini à l'instanciation de la classe).\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:139
msgid ""
"\n"
"        Parses a verb and returns the ending ngrams.\n"
"\n"
"        :param verb: string.\n"
"            Verb to vectorize.\n"
"        :return: list.\n"
"            Final ngrams of the verb.\n"
"        "
msgstr ""
"\n"
"        Analyse un verbe et renvoie les n-grams de fin.\n"
"\n"
"        :param verb: string.\n"
"            Verbe à vectoriser.\n"
"        :return: list.\n"
"            N-grammes finaux du verbe.\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:156
msgid ""
"\n"
"    | This class holds and manages the data set.\n"
"    | Defines helper functions for managing Machine Learning tasks like "
"constructing a training and testing set.\n"
"\n"
"    :param VerbisteObj:\n"
"        Instance of a Verbiste object.\n"
"\n"
"    "
msgstr ""
"\n"
"    | Cette classe contient et gère l'ensemble des données.\n"
"    | Définit les fonctions d'assistance pour la gestion des tâches "
"d'apprentissage automatique, telles que la construction d'un ensemble "
"d'entrainement et de test.\n"
"\n"
"    :param VerbisteObj:\n"
"        Instance d'un objet Verbiste.\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:181
msgid ""
"\n"
"        | Populates the dictionary containing the conjugation templates.\n"
"        | Populates the lists containing the verbs and their templates.\n"
"\n"
"        "
msgstr ""
"\n"
"        | Remplit le dictionnaire contenant les modèles de conjugaison.\n"
"        | Remplit les listes contenant les verbes et leurs modèles.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:195
msgid ""
"\n"
"        Splits the data into a training and a testing set.\n"
"\n"
"        :param threshold: int.\n"
"            Minimum size of conjugation class to be split.\n"
"        :param proportion: float.\n"
"            Proportion of samples in the training set.\n"
"            Must be between 0 and 1.\n"
"\n"
"        "
msgstr ""
"\n"
"        Divise les données en un ensemble d'entrainement et de test.\n"
"\n"
"        :param threshold: int.\n"
"            Taille minimale de la classe de conjugaison à diviser.\n"
"        :param proportion: float.\n"
"            Proportion d'échantillons dans l'ensemble d'apprentissage.\n"
"            Doit être compris entre 0 et 1.\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:206
msgid "The split proportion must be between 0 and 1."
msgstr "La proportion doit être comprise entre 0 et 1."

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:231
msgid ""
"\n"
"    | This class manages the scikit-learn model.\n"
"    | The Pipeline includes a feature vectorizer, a feature selector and a "
"classifier.\n"
"    | If any of the vectorizer, feature selector or classifier is not "
"supplied at instance declaration,\n"
"    the __init__ method will provide good default values that get more than "
"92% prediction accuracy.\n"
"\n"
"    :param vectorizer: scikit-learn Vectorizer.\n"
"    :param feature_selector: scikit-learn Classifier with a fit_transform() "
"method\n"
"    :param classifier: scikit-learn Classifier with a predict() method\n"
"\n"
"    "
msgstr ""
"\n"
"\n"
"    | Cette classe gère le modèle scikit-learn.\n"
"    | Le Pipeline comprend un vectorizer de caractéristiques, un sélecteur "
"de caractéristiques et un classificateur.\n"
"    | Si l'un des vectorizer, sélecteur de caractéristiques ou "
"classificateur n'est pas fourni lors de la déclaration d'instance,\n"
"    la méthode __init__ fournira de bonnes valeurs par défaut qui "
"obtiendront plus de 92% de précision de prédiction.\n"
"\n"
"    :param vectorizer: scikit-learn Vectorizer.\n"
"    :param feature_selector: scikit-learn Classifier avec une méthode "
"fit_transform ()\n"
"    :param classifier: scikit-learn Classifier avec une méthode predict ()\n"
"\n"
"    "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:258
msgid ""
"\n"
"        Trains the model on the supplied samples and labels.\n"
"\n"
"        :param samples: list.\n"
"            List of verbs.\n"
"        :param labels: list.\n"
"            List of verb templates.\n"
"\n"
"        "
msgstr ""
"\n"
"        Entraîne le modèle sur les échantillons et les étiquettes fournis.\n"
"\n"
"        :param samples: list.\n"
"            Liste des verbes\n"
"        :param labels: list.\n"
"            Liste des modèles de verbes\n"
"\n"
"        "

#: C:\Users\Utilisateur\PycharmProjects\mlconjug\mlconjug\mlconjug.py:271
msgid ""
"\n"
"        Predicts the conjugation class of the provided list of verbs.\n"
"\n"
"        :param verbs: list.\n"
"            List of verbs.\n"
"        :return: list.\n"
"            List of predicted conjugation groups.\n"
"\n"
"        "
msgstr ""
"\n"
"        Prédit la classe de conjugaison de la liste de verbes fournie.\n"
"\n"
"        :param verbs: list.\n"
"            Liste des verbes\n"
"        :return: list.\n"
"            Liste des groupes de conjugaison prédits.\n"
"\n"
"        "
