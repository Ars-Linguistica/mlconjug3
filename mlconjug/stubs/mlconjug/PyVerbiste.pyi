# Stubs for mlconjug.PyVerbiste (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

__author__: str
__author_email__: str
RESOURCE_PACKAGE = __name__
LANGUAGES: Any
VERBS_RESOURCE_PATH: Any
CONJUGATIONS_RESOURCE_PATH: Any
ABBREVS: Any
PRONOUNS: Any
IMPERATIVE_PRONOUNS: Any
GENDER: Any
NEGATION: Any

class Verbiste:
    language: str = ...
    verbs: Any = ...
    conjugations: Any = ...
    _allowed_endings: Any = ...
    templates: Any = ...
    def __init__(self, language: str = ...) -> None: ...
    def __repr__(self): ...
    def _load_verbs(self, verbs_file: Any): ...
    def _parse_verbs(self, file: Any): ...
    def _detect_allowed_endings(self): ...
    def is_valid_verb(self, verb: Any): ...
    def _load_conjugations(self, conjugations_file: Any): ...
    def _parse_conjugations(self, file: Any): ...
    def _load_tense(self, tense: Any): ...
    def get_verb_info(self, verb: Any): ...
    def get_conjug_info(self, template: Any): ...

class VerbInfo:
    __slots__: Any = ...
    infinitive: Any = ...
    root: Any = ...
    template: Any = ...
    def __init__(self, infinitive: Any, root: Any, template: Any) -> None: ...
    def __repr__(self): ...
    def __eq__(self, other: Any): ...

class Verb:
    __slots__: Any = ...
    language: str = ...
    name: Any = ...
    verb_info: Any = ...
    conjug_info: Any = ...
    subject: Any = ...
    def __init__(self, verb_info: Any, conjug_info: Any, subject: str = ...) -> None: ...
    def __repr__(self): ...
    def _load_conjug(self): ...

class VerbFr(Verb):
    __slots__: Any = ...
    language: str = ...
    def _load_conjug(self): ...

class VerbEn(Verb):
    __slots__: Any = ...
    language: str = ...
    def _load_conjug(self): ...

class VerbEs(Verb):
    __slots__: Any = ...
    language: str = ...
    def _load_conjug(self): ...

class VerbIt(Verb):
    __slots__: Any = ...
    language: str = ...
    def _load_conjug(self): ...

class VerbPt(Verb):
    __slots__: Any = ...
    language: str = ...
    def _load_conjug(self): ...

class VerbRo(Verb):
    __slots__: Any = ...
    language: str = ...
    def _load_conjug(self): ...
