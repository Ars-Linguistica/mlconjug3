# Stubs for mlconjug.mlconjug (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from .PyVerbiste import Verb, VerbEn, VerbEs, VerbFr, VerbInfo, VerbIt, VerbPt, VerbRo, Verbiste
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.base import BaseEstimator
from typing import Any, Optional, Text, Dict, List, Tuple, DefaultDict, KeysView, ValuesView, ItemsView, Union


_RESOURCE_PACKAGE = __name__
_LANGUAGE_FULL: Any
_VERBS: Any
_PRE_TRAINED_MODEL_PATH: Any

class Conjugator:
    language: Text = ...
    verbiste: Verbiste = ...
    data_set: DataSet = ...
    model: Model = ...
    def __init__(self, language: Text = ..., model: Optional[Model] = ...) -> None: ...
    def __repr__(self) -> Text: ...
    def conjugate(self, verb: Text, subject: Text = ...) -> Optional[Verb]: ...
    def set_model(self, model: Model) -> None: ...

class EndingCountVectorizer(CountVectorizer):
    def _char_ngrams(self, verb: Text) -> List[Text]: ...

class DataSet:
    verbiste: Verbiste = ...
    verbes: KeysView = ...
    templates: List[Text] = ...
    liste_verbes: List[Text] = ...
    liste_templates: List[int] = ...
    dict_conjug: DefaultDict[Text,List[Text]] = ...
    train_input: List[Text] = ...
    train_labels: List[int] = ...
    test_input: List[Text] = ...
    test_labels: List[int] = ...
    def __init__(self, VerbisteObj: Verbiste) -> None: ...
    def __repr__(self) -> Text: ...
    def construct_dict_conjug(self) -> None: ...
    min_threshold: int = ...
    split_proportion: float = ...
    def split_data(self, threshold: int = ..., proportion: float = ...) -> None: ...

class Model:
    model: Optional[Model] = ...
    def __init__(self, vectorizer: Optional[Union[EndingCountVectorizer, CountVectorizer]] = ..., feature_selector: Optional[BaseEstimator] = ..., classifier: Optional[BaseEstimator] = ...) -> None: ...
    def __repr__(self) -> Text: ...
    def train(self, samples: Any, labels: Any) -> None: ...
    def predict(self, verbs: Any) -> Optional[Verb]: ...
